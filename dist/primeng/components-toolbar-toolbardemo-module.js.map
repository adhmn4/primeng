{"version":3,"sources":["webpack:///./src/app/components/button/button.ts","webpack:///./src/app/components/toolbar/toolbar.ts","webpack:///./src/app/showcase/components/toolbar/toolbardemo-routing.module.ts","webpack:///./src/app/showcase/components/toolbar/toolbardemo.html","webpack:///./src/app/showcase/components/toolbar/toolbardemo.module.ts","webpack:///./src/app/showcase/components/toolbar/toolbardemo.ts"],"names":[],"mappings":"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","file":"components-toolbar-toolbardemo-module.js","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,HostBinding,HostListener,Input} from '@angular/core';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[pButton]',\r\n    providers: [DomHandler]\r\n})\r\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input() iconPos: string = 'left';\r\n    \r\n    @Input() cornerStyleClass: string = 'ui-corner-all';\r\n        \r\n    public _label: string;\r\n    \r\n    public _icon: string;\r\n            \r\n    public initialized: boolean;\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\r\n    \r\n    ngAfterViewInit() {\r\n        this.domHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\r\n        if(this.icon) {\r\n            let iconElement = document.createElement(\"span\");\r\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\r\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\r\n            iconElement.className = iconPosClass  + ' ui-clickable fa fa-fw ' + this.icon;\r\n            this.el.nativeElement.appendChild(iconElement);\r\n        }\r\n        \r\n        let labelElement = document.createElement(\"span\");\r\n        labelElement.className = 'ui-button-text ui-clickable';\r\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\r\n        this.el.nativeElement.appendChild(labelElement);\r\n        this.initialized = true;\r\n    }\r\n        \r\n    getStyleClass(): string {\r\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\r\n        if(this.icon) {\r\n            if(this.label != null && this.label != undefined) {\r\n                if(this.iconPos == 'left')\r\n                    styleClass = styleClass + ' ui-button-text-icon-left';\r\n                else\r\n                    styleClass = styleClass + ' ui-button-text-icon-right';\r\n            }\r\n            else {\r\n                styleClass = styleClass + ' ui-button-icon-only';\r\n            }\r\n        }\r\n        else {\r\n            if(this.label) {\r\n                styleClass = styleClass + ' ui-button-text-only';\r\n            }\r\n            else {\r\n                styleClass = styleClass + ' ui-button-text-empty';\r\n            }\r\n        }\r\n        \r\n        return styleClass;\r\n    }\r\n    \r\n    @Input() get label(): string {\r\n        return this._label;\r\n    }\r\n\r\n    set label(val: string) {\r\n        this._label = val;\r\n        \r\n        if(this.initialized) {\r\n            this.domHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;\r\n\r\n            if(!this.icon) {\r\n                if (this._label) {\r\n                    this.domHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\r\n                    this.domHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\r\n                }\r\n                else {\r\n                    this.domHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\r\n                    this.domHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    @Input() get icon(): string {\r\n        return this._icon;\r\n    }\r\n\r\n    set icon(val: string) {\r\n        this._icon = val;\r\n        \r\n        if(this.initialized) {\r\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\r\n            this.domHandler.findSingle(this.el.nativeElement, '.fa').className =\r\n                iconPosClass + ' ui-clickable fa fa-fw ' + this.icon;\r\n        }\r\n    }\r\n        \r\n    ngOnDestroy() {\r\n        while(this.el.nativeElement.hasChildNodes()) {\r\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\r\n        }\r\n        \r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-button',\r\n    template: `\r\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [style]=\"style\" [disabled]=\"disabled\"\r\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\r\n                        'ui-button-icon-only': (icon && !label),\r\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\r\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\r\n                        'ui-button-text-only': (!icon && label),\r\n                        'ui-button-text-empty': (!icon && !label),\r\n                        'ui-state-disabled': disabled}\"\r\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\r\n            <ng-content></ng-content>\r\n            <span [ngClass]=\"{'ui-clickable': true,\r\n                        'ui-button-icon-left': (iconPos === 'left'), \r\n                        'ui-button-icon-right': (iconPos === 'right')}\"\r\n                        [class]=\"icon\" *ngIf=\"icon\"></span>\r\n            <span class=\"ui-button-text ui-clickable\">{{label||'ui-btn'}}</span>\r\n        </button>\r\n    `\r\n})\r\nexport class Button {\r\n\r\n    @Input() type: string = 'button';\r\n\r\n    @Input() iconPos: string = 'left';\r\n\r\n    @Input() icon: string;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [ButtonDirective,Button],\r\n    declarations: [ButtonDirective,Button]\r\n})\r\nexport class ButtonModule { }\r\n","import {NgModule,Component,Input,Output,EventEmitter,ElementRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BlockableUI} from '../common/blockableui';\r\n\r\n@Component({\r\n    selector: 'p-toolbar',\r\n    template: `\r\n        <div [ngClass]=\"'ui-toolbar ui-widget ui-widget-header ui-corner-all ui-helper-clearfix'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `\r\n})\r\nexport class Toolbar implements BlockableUI {\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    getBlockableElement(): HTMLElement {\r\n      return this.el.nativeElement.children[0];\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Toolbar],\r\n    declarations: [Toolbar]\r\n})\r\nexport class ToolbarModule { }\r\n","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {ToolbarDemo} from './toolbardemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: ToolbarDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class ToolbarDemoRoutingModule {}\r\n","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Toolbar</span>\\r\\n        <span>Toolbar is a grouping component for buttons and other content.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <p-toolbar>\\r\\n        <div class=\\\"ui-toolbar-group-left\\\">\\r\\n            <button pButton type=\\\"button\\\" label=\\\"New\\\" icon=\\\"fa-plus\\\"></button>\\r\\n            <button pButton type=\\\"button\\\" label=\\\"Open\\\" icon=\\\"fa-folder-open\\\" class=\\\"ui-button-success\\\"></button>\\r\\n                \\r\\n            <i class=\\\"fa fa-bars\\\"></i>\\r\\n            \\r\\n            <p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"></p-splitButton>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"ui-toolbar-group-right\\\">\\r\\n            <button pButton type=\\\"button\\\" icon=\\\"fa-search\\\"></button>\\r\\n            <button pButton type=\\\"button\\\" icon=\\\"fa-refresh\\\"></button>\\r\\n            <button pButton type=\\\"button\\\" icon=\\\"fa-trash\\\" class=\\\"ui-button-danger\\\"></button>\\r\\n        </div>\\r\\n   </p-toolbar>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;ToolbarModule&#125; from 'primeng/toolbar';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Toolbar is a container component defined using p-toolbar element. Left aligned content is placed inside a div \\r\\n            having .ui-toolbar-group-left class and similarly .ui-toolbar-group-right for right alignment.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-toolbar&gt;\\r\\n    &lt;div class=\\\"ui-toolbar-group-left\\\"&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" label=\\\"New\\\" icon=\\\"fa-plus\\\"&gt;&lt;/button&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" label=\\\"Open\\\" icon=\\\"fa-folder-open\\\"&gt;&lt;/button&gt;\\r\\n            \\r\\n        &lt;i class=\\\"fa fa-bars\\\"&gt;&lt;/i&gt;\\r\\n        \\r\\n        &lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\r\\n    &lt;/div&gt;\\r\\n    \\r\\n    &lt;div class=\\\"ui-toolbar-group-right\\\"&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" icon=\\\"fa-search\\\"&gt;&lt;/button&gt;\\r\\n        &lt;i class=\\\"fa fa-bars\\\"&gt;&lt;/i&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" icon=\\\"fa-refresh\\\"&gt;&lt;/button&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" icon=\\\"fa-trash\\\"&gt;&lt;/button&gt;\\r\\n    &lt;/div&gt;\\r\\n&lt;/p-toolbar&gt;\\r\\n</code>\\r\\n</pre>\\r\\n            \\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the component.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the component.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-toolbar</td>\\r\\n                            <td>Main container element.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-toolbar-group-left</td>\\r\\n                            <td>Left content container.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-toolbar-group-right</td>\\r\\n                            <td>Right content container.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p>None.</p>\\r\\n        </p-tabPanel>\\r\\n\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/toolbar\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-toolbar&gt;\\r\\n    &lt;div class=\\\"ui-toolbar-group-left\\\"&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" label=\\\"New\\\" icon=\\\"fa-plus\\\"&gt;&lt;/button&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" label=\\\"Open\\\" icon=\\\"fa-folder-open\\\" class=\\\"ui-button-success\\\"&gt;&lt;/button&gt;\\r\\n            \\r\\n        &lt;i class=\\\"fa fa-bars\\\"&gt;&lt;/i&gt;\\r\\n        \\r\\n        &lt;p-splitButton label=\\\"Save\\\" icon=\\\"fa-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\r\\n    &lt;/div&gt;\\r\\n    \\r\\n    &lt;div class=\\\"ui-toolbar-group-right\\\"&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" icon=\\\"fa-search\\\"&gt;&lt;/button&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" icon=\\\"fa-refresh\\\"&gt;&lt;/button&gt;\\r\\n        &lt;button pButton type=\\\"button\\\" icon=\\\"fa-trash\\\" class=\\\"ui-button-danger\\\"&gt;&lt;/button&gt;\\r\\n    &lt;/div&gt;\\r\\n&lt;/p-toolbar&gt;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\"","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ToolbarDemo} from './toolbardemo';\r\nimport {ToolbarDemoRoutingModule} from './toolbardemo-routing.module';\r\nimport {ToolbarModule} from '../../../components/toolbar/toolbar';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {SplitButtonModule} from '../../../components/splitbutton/splitbutton';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tToolbarDemoRoutingModule,\r\n        ToolbarModule,\r\n        ButtonModule,\r\n        SplitButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tToolbarDemo\r\n\t]\r\n})\r\nexport class ToolbarDemoModule {}\r\n","import {Component,OnInit} from '@angular/core';\r\nimport {MenuItem} from '../../../components/common/api';\r\n\r\n@Component({\r\n    templateUrl: './toolbardemo.html',\r\n    styles: [`\r\n        :host ::ng-deep button {\r\n            margin-right: .25em;\r\n        }\r\n\r\n        :host ::ng-deep .ui-splitbutton {\r\n            margin-left: .25em;\r\n        }\r\n\r\n        :host ::ng-deep .ui-splitbutton button {\r\n            margin-right: 0;\r\n        }\r\n    `]\r\n})\r\nexport class ToolbarDemo implements OnInit {\r\n\r\n    items: MenuItem[];\r\n    \r\n    ngOnInit() {\r\n        this.items = [\r\n            {label: 'Angular.io', icon: 'fa-link', url: 'http://angular.io'},\r\n            {label: 'Theming', icon: 'fa-paint-brush', routerLink: ['/theming']}\r\n        ];\r\n    }\r\n}\r\n"],"sourceRoot":""}