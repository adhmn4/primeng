{"version":3,"sources":["webpack:///./src/app/components/common/messageservice.ts","webpack:///./src/app/components/growl/growl.ts"],"names":[],"mappings":"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","file":"components-accordion-accordiondemo-module~components-captcha-captchademo-module~components-carousel-~d36510bf.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Message } from './message';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n    \r\n    private messageSource = new Subject<Message|Message[]>();\r\n    \r\n    messageObserver = this.messageSource.asObservable();\r\n    \r\n    add(message: Message) {\r\n        if(message) {\r\n            this.messageSource.next(message);\r\n        }\r\n    }\r\n    \r\n    addAll(messages: Message[]) {\r\n        if(messages && messages.length) {\r\n            this.messageSource.next(messages);\r\n        } \r\n    }\r\n    \r\n    clear() {\r\n        this.messageSource.next(null);\r\n    }\r\n}","import {NgModule,Component,ElementRef,AfterViewInit,DoCheck,OnDestroy,Input,Output,ViewChild,EventEmitter,IterableDiffers,Optional,NgZone} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Message} from '../common/message';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {MessageService} from '../common/messageservice';\r\nimport {Subscription}   from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'p-growl',\r\n    template: `\r\n        <div #container [ngClass]=\"'ui-growl ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div #msgel *ngFor=\"let msg of value;let i = index\" class=\"ui-growl-item-container ui-state-highlight ui-corner-all ui-shadow\" aria-live=\"polite\"\r\n                [ngClass]=\"{'ui-growl-message-info':msg.severity == 'info','ui-growl-message-warn':msg.severity == 'warn',\r\n                    'ui-growl-message-error':msg.severity == 'error','ui-growl-message-success':msg.severity == 'success'}\"\r\n                    (click)=\"onMessageClick(i)\" (mouseenter)=\"onMessageHover(i)\">\r\n                <div class=\"ui-growl-item\">\r\n                     <div class=\"ui-growl-icon-close fa fa-close\" (click)=\"remove(i,msgel)\"></div>\r\n                     <span class=\"ui-growl-image fa fa-2x\"\r\n                        [ngClass]=\"{'fa-info-circle':msg.severity == 'info','fa-exclamation-circle':msg.severity == 'warn',\r\n                                'fa-close':msg.severity == 'error','fa-check':msg.severity == 'success'}\"></span>\r\n                     <div class=\"ui-growl-message\">\r\n                        <span class=\"ui-growl-title\">{{msg.summary}}</span>\r\n                        <p [innerHTML]=\"msg.detail||''\"></p>\r\n                     </div>\r\n                     <div style=\"clear: both;\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [DomHandler]\r\n})\r\nexport class Growl implements AfterViewInit,DoCheck,OnDestroy {\r\n\r\n    @Input() life: number = 3000;\r\n        \r\n    @Input() style: any;\r\n        \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() immutable: boolean = true;\r\n    \r\n    @Input() autoZIndex: boolean = true;\r\n    \r\n    @Input() baseZIndex: number = 0;\r\n\r\n    @Input() key: string;\r\n    \r\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onHover: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() valueChange: EventEmitter<Message[]> = new EventEmitter<Message[]>();\r\n    \r\n    @ViewChild('container') containerViewChild: ElementRef;\r\n\r\n    _sticky: boolean;\r\n    \r\n    _value: Message[];\r\n                        \r\n    timeout: any;\r\n    \r\n    preventRerender: boolean;\r\n    \r\n    differ: any;\r\n    \r\n    subscription: Subscription;\r\n    \r\n    closeIconClick: boolean;\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler, public differs: IterableDiffers, @Optional() public messageService: MessageService, private zone: NgZone) {\r\n        this.differ = differs.find([]).create(null);\r\n        \r\n        if(messageService) {\r\n            this.subscription = messageService.messageObserver.subscribe(messages => {\r\n                if(messages) {\r\n                    if(messages instanceof Array) {\r\n                        let filteredMessages = messages.filter(m => this.key === m.key);\r\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\r\n                    }\r\n                    else if (this.key === messages.key) {\r\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\r\n                    }\r\n                }\r\n                else {\r\n                    this.value = null;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if(!this.sticky) {\r\n            this.initTimeout();\r\n        }\r\n    }\r\n    \r\n    @Input() get value(): Message[] {\r\n        return this._value;\r\n    }\r\n\r\n    set value(val:Message[]) {\r\n        this._value = val;\r\n        if(this.containerViewChild && this.containerViewChild.nativeElement && this.immutable) {\r\n            this.handleValueChange();\r\n        }\r\n    }\r\n    \r\n    @Input() get sticky(): boolean {\r\n        return this._sticky;\r\n    }\r\n\r\n    set sticky(value: boolean) {\r\n        if(value && this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n        this._sticky = value;\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if(!this.immutable && this.containerViewChild && this.containerViewChild.nativeElement) {\r\n            let changes = this.differ.diff(this.value);\r\n            if(changes) {\r\n                this.handleValueChange();\r\n            }\r\n        }\r\n    }\r\n    \r\n    handleValueChange() {\r\n        if(this.preventRerender) {\r\n            this.preventRerender = false;\r\n            return;\r\n        }\r\n        \r\n        if(this.autoZIndex) {\r\n            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\r\n        }\r\n        this.domHandler.fadeIn(this.containerViewChild.nativeElement, 250);\r\n        \r\n        if(!this.sticky) {\r\n            this.initTimeout();\r\n        }\r\n    }\r\n    \r\n    initTimeout() {\r\n        if(this.timeout) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.timeout = setTimeout(() => {\r\n                this.zone.run(() => {\r\n                    this.removeAll();\r\n                });\r\n            }, this.life);\r\n        });\r\n    }\r\n        \r\n    remove(index: number, msgel: any) {      \r\n        this.closeIconClick = true;  \r\n        this.domHandler.fadeOut(msgel, 250);\r\n        \r\n        setTimeout(() => {\r\n            this.preventRerender = true;\r\n            this.onClose.emit({message:this.value[index]});\r\n            \r\n            if(this.immutable) {\r\n                this._value = this.value.filter((val,i) => i!=index);\r\n                this.valueChange.emit(this._value);\r\n            }\r\n            else {\r\n                this._value.splice(index, 1);\r\n            }\r\n        }, 250);        \r\n    }\r\n    \r\n    removeAll() {\r\n        if(this.value && this.value.length) {            \r\n            this.domHandler.fadeOut(this.containerViewChild.nativeElement, 250);\r\n            \r\n            setTimeout(() => {                \r\n                this.value.forEach((msg,index) => this.onClose.emit({message:this.value[index]}));\r\n                if(this.immutable) {\r\n                    this.value = [];\r\n                    this.valueChange.emit(this.value);\r\n                }\r\n                else {\r\n                    this.value.splice(0, this.value.length);\r\n                }\r\n            }, 250);\r\n        }\r\n    }\r\n    \r\n    onMessageClick(i: number) {\r\n        if(this.closeIconClick)\r\n            this.closeIconClick = false;\r\n        else\r\n            this.onClick.emit({message: this.value[i]});\r\n    }\r\n    \r\n    onMessageHover(i: number) {\r\n        this.onHover.emit({message: this.value[i]});\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        if(!this.sticky) {\r\n            clearTimeout(this.timeout);\r\n        }\r\n        \r\n        if(this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Growl],\r\n    declarations: [Growl]\r\n})\r\nexport class GrowlModule { }"],"sourceRoot":""}