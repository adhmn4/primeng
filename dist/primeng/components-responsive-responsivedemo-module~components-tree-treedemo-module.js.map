{"version":3,"sources":["webpack:///./src/app/components/common/treedragdropservice.ts","webpack:///./src/app/components/tree/tree.ts"],"names":[],"mappings":"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","file":"components-responsive-responsivedemo-module~components-tree-treedemo-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { TreeNode } from './treenode';\r\nimport { TreeNodeDragEvent } from './treenodedragevent';\r\n\r\n@Injectable()\r\nexport class TreeDragDropService {\r\n    \r\n    private dragStartSource = new Subject<TreeNodeDragEvent>();\r\n    private dragStopSource = new Subject<TreeNodeDragEvent>();\r\n    \r\n    dragStart$ = this.dragStartSource.asObservable();\r\n    dragStop$ = this.dragStopSource.asObservable();\r\n    \r\n    startDrag(event: TreeNodeDragEvent) {\r\n        this.dragStartSource.next(event);\r\n    }\r\n    \r\n    stopDrag(event: TreeNodeDragEvent) {\r\n        this.dragStopSource.next(event);\r\n    }\r\n}","import {NgModule,Component,Input,AfterContentInit,OnDestroy,Output,EventEmitter,OnInit,EmbeddedViewRef,ViewContainerRef,\r\n    ContentChildren,QueryList,TemplateRef,Inject,ElementRef,forwardRef,Host} from '@angular/core';\r\nimport {Optional} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {TreeNode} from '../common/treenode';\r\nimport {SharedModule} from '../common/shared';\r\nimport {PrimeTemplate} from '../common/shared';\r\nimport {TreeDragDropService} from '../common/treedragdropservice';\r\nimport {Subscription}   from 'rxjs';\r\nimport {BlockableUI} from '../common/blockableui';\r\n\r\n@Component({\r\n    selector: 'p-treeNode',\r\n    template: `\r\n        <ng-template [ngIf]=\"node\">\r\n            <li *ngIf=\"tree.droppableNodes\" class=\"ui-treenode-droppoint\" [ngClass]=\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverPrev}\"\r\n            (drop)=\"onDropPoint($event,-1)\" (dragover)=\"onDropPointDragOver($event)\" (dragenter)=\"onDropPointDragEnter($event,-1)\" (dragleave)=\"onDropPointDragLeave($event)\"></li>\r\n            <li *ngIf=\"!tree.horizontal\" [ngClass]=\"['ui-treenode',node.styleClass||'', isLeaf() ? 'ui-treenode-leaf': '']\">\r\n                <div class=\"ui-treenode-content\" (click)=\"onNodeClick($event)\" (contextmenu)=\"onNodeRightClick($event)\" (touchend)=\"onNodeTouchEnd()\"\r\n                    (drop)=\"onDropNode($event)\" (dragover)=\"onDropNodeDragOver($event)\" (dragenter)=\"onDropNodeDragEnter($event)\" (dragleave)=\"onDropNodeDragLeave($event)\"\r\n                    [ngClass]=\"{'ui-treenode-selectable':tree.selectionMode && node.selectable !== false,'ui-treenode-dragover':draghoverNode, 'ui-treenode-content-selected':isSelected()}\" [draggable]=\"tree.draggableNodes\" (dragstart)=\"onDragStart($event)\" (dragend)=\"onDragStop($event)\">\r\n                    <span class=\"ui-tree-toggler  fa fa-fw\" [ngClass]=\"{'fa-caret-right':!node.expanded,'fa-caret-down':node.expanded}\"\r\n                            (click)=\"toggle($event)\"></span\r\n                    ><div class=\"ui-chkbox\" *ngIf=\"tree.selectionMode == 'checkbox'\"><div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\">\r\n                        <span class=\"ui-chkbox-icon ui-clickable fa\" \r\n                            [ngClass]=\"{'fa-check':isSelected(),'fa-minus':node.partialSelected}\"></span></div></div\r\n                    ><span [class]=\"getIcon()\" *ngIf=\"node.icon||node.expandedIcon||node.collapsedIcon\"></span\r\n                    ><span class=\"ui-treenode-label ui-corner-all\" \r\n                        [ngClass]=\"{'ui-state-highlight':isSelected()}\">\r\n                            <span *ngIf=\"!tree.getTemplateForNode(node)\">{{node.label}}</span>\r\n                            <span *ngIf=\"tree.getTemplateForNode(node)\">\r\n                                <ng-container *ngTemplateOutlet=\"tree.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\r\n                            </span>\r\n                    </span>\r\n                </div>\r\n                <ul class=\"ui-treenode-children\" style=\"display: none;\" *ngIf=\"node.children && node.expanded\" [style.display]=\"node.expanded ? 'block' : 'none'\">\r\n                    <p-treeNode *ngFor=\"let childNode of node.children;let firstChild=first;let lastChild=last; let index=index\" [node]=\"childNode\" [parentNode]=\"node\"\r\n                        [firstChild]=\"firstChild\" [lastChild]=\"lastChild\" [index]=\"index\"></p-treeNode>\r\n                </ul>\r\n            </li>\r\n            <li *ngIf=\"tree.droppableNodes&&lastChild\" class=\"ui-treenode-droppoint\" [ngClass]=\"{'ui-treenode-droppoint-active ui-state-highlight':draghoverNext}\"\r\n            (drop)=\"onDropPoint($event,1)\" (dragover)=\"onDropPointDragOver($event)\" (dragenter)=\"onDropPointDragEnter($event,1)\" (dragleave)=\"onDropPointDragLeave($event)\"></li>\r\n            <table *ngIf=\"tree.horizontal\" [class]=\"node.styleClass\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td class=\"ui-treenode-connector\" *ngIf=\"!root\">\r\n                            <table class=\"ui-treenode-connector-table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td [ngClass]=\"{'ui-treenode-connector-line':!firstChild}\"></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td [ngClass]=\"{'ui-treenode-connector-line':!lastChild}\"></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </td>\r\n                        <td class=\"ui-treenode\" [ngClass]=\"{'ui-treenode-collapsed':!node.expanded}\">\r\n                            <div class=\"ui-treenode-content ui-state-default ui-corner-all\" \r\n                                [ngClass]=\"{'ui-treenode-selectable':tree.selectionMode,'ui-state-highlight':isSelected()}\" (click)=\"onNodeClick($event)\" (contextmenu)=\"onNodeRightClick($event)\"\r\n                                (touchend)=\"onNodeTouchEnd()\">\r\n                                <span class=\"ui-tree-toggler fa fa-fw\" [ngClass]=\"{'fa-plus':!node.expanded,'fa-minus':node.expanded}\" *ngIf=\"!isLeaf()\"\r\n                                        (click)=\"toggle($event)\"></span\r\n                                ><span [class]=\"getIcon()\" *ngIf=\"node.icon||node.expandedIcon||node.collapsedIcon\"></span\r\n                                ><span class=\"ui-treenode-label ui-corner-all\">\r\n                                        <span *ngIf=\"!tree.getTemplateForNode(node)\">{{node.label}}</span>\r\n                                        <span *ngIf=\"tree.getTemplateForNode(node)\">\r\n                                        <ng-container *ngTemplateOutlet=\"tree.getTemplateForNode(node); context: {$implicit: node}\"></ng-container>\r\n                                        </span>\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"ui-treenode-children-container\" *ngIf=\"node.children && node.expanded\" [style.display]=\"node.expanded ? 'table-cell' : 'none'\">\r\n                            <div class=\"ui-treenode-children\">\r\n                                <p-treeNode *ngFor=\"let childNode of node.children;let firstChild=first;let lastChild=last;\" [node]=\"childNode\" \r\n                                        [firstChild]=\"firstChild\" [lastChild]=\"lastChild\"></p-treeNode>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </ng-template>\r\n    `\r\n})\r\nexport class UITreeNode implements OnInit {\r\n\r\n    static ICON_CLASS: string = 'ui-treenode-icon fa fa-fw';\r\n\r\n    @Input() node: TreeNode;\r\n\r\n    @Input() parentNode: TreeNode;\r\n\r\n    @Input() root: boolean;\r\n\r\n    @Input() index: number;\r\n\r\n    @Input() firstChild: boolean;\r\n\r\n    @Input() lastChild: boolean;\r\n\r\n    constructor(@Inject(forwardRef(() => Tree)) public tree:Tree) {}\r\n\r\n    draghoverPrev: boolean;\r\n\r\n    draghoverNext: boolean;\r\n\r\n    draghoverNode: boolean\r\n\r\n    ngOnInit() {\r\n        this.node.parent = this.parentNode;\r\n    }\r\n\r\n    getIcon() {\r\n        let icon: string;\r\n\r\n        if(this.node.icon)\r\n            icon = this.node.icon;\r\n        else\r\n            icon = this.node.expanded && this.node.children && this.node.children.length ? this.node.expandedIcon : this.node.collapsedIcon;\r\n\r\n        return UITreeNode.ICON_CLASS + ' ' + icon;\r\n    }\r\n\r\n    isLeaf() {\r\n        return this.node.leaf == false ? false : !(this.node.children&&this.node.children.length);\r\n    }\r\n\r\n    toggle(event: Event) {\r\n        if(this.node.expanded)\r\n            this.tree.onNodeCollapse.emit({originalEvent: event, node: this.node});\r\n        else\r\n            this.tree.onNodeExpand.emit({originalEvent: event, node: this.node});\r\n\r\n        this.node.expanded = !this.node.expanded\r\n    }\r\n\r\n    onNodeClick(event: MouseEvent) {\r\n        this.tree.onNodeClick(event, this.node);\r\n    }\r\n\r\n    onNodeTouchEnd() {\r\n        this.tree.onNodeTouchEnd();\r\n    }\r\n\r\n    onNodeRightClick(event: MouseEvent) {\r\n        this.tree.onNodeRightClick(event, this.node);\r\n    }\r\n\r\n    isSelected() {\r\n        return this.tree.isSelected(this.node);\r\n    }\r\n\r\n    onDropPoint(event: Event, position: number) {\r\n        event.preventDefault();\r\n        let dragNode = this.tree.dragNode;\r\n        let dragNodeIndex = this.tree.dragNodeIndex;\r\n        let dragNodeScope = this.tree.dragNodeScope;\r\n        let isValidDropPointIndex = this.tree.dragNodeTree === this.tree ? (position === 1 || dragNodeIndex !== this.index - 1) : true;\r\n\r\n        if(this.tree.allowDrop(dragNode, this.node, dragNodeScope) && isValidDropPointIndex) {\r\n            let newNodeList = this.node.parent ? this.node.parent.children : this.tree.value;\r\n            this.tree.dragNodeSubNodes.splice(dragNodeIndex, 1);\r\n            let dropIndex = this.index;\r\n\r\n            if(position < 0) {\r\n                dropIndex = (this.tree.dragNodeSubNodes === newNodeList) ? ((this.tree.dragNodeIndex > this.index) ? this.index : this.index - 1) : this.index;\r\n                newNodeList.splice(dropIndex, 0, dragNode);\r\n            }\r\n            else {\r\n\t\t\t\tdropIndex = newNodeList.length;\r\n                newNodeList.push(dragNode);\r\n            }\r\n\r\n            this.tree.dragDropService.stopDrag({\r\n                node: dragNode,\r\n                subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n                index: dragNodeIndex\r\n            });\r\n\r\n            this.tree.onNodeDrop.emit({\r\n                originalEvent: event,\r\n                dragNode: dragNode,\r\n                dropNode: this.node,\r\n                dropIndex: dropIndex\r\n            });\r\n        }\r\n\r\n        this.draghoverPrev = false;\r\n        this.draghoverNext = false;\r\n    }\r\n\r\n    onDropPointDragOver(event) {\r\n        event.dataTransfer.dropEffect = 'move';\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDropPointDragEnter(event: Event, position: number) {\r\n        if(this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\r\n            if(position < 0)\r\n                this.draghoverPrev = true;\r\n            else\r\n                this.draghoverNext = true;\r\n        }\r\n    }\r\n\r\n    onDropPointDragLeave(event: Event) {\r\n        this.draghoverPrev = false;\r\n        this.draghoverNext = false;\r\n    }\r\n\r\n    onDragStart(event) {\r\n        if(this.tree.draggableNodes && this.node.draggable !== false) {\r\n            event.dataTransfer.setData(\"text\", \"data\");\r\n\r\n            this.tree.dragDropService.startDrag({\r\n                tree: this,\r\n                node: this.node,\r\n                subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n                index: this.index,\r\n                scope: this.tree.draggableScope\r\n            });\r\n        }\r\n        else {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDragStop(event) {\r\n        this.tree.dragDropService.stopDrag({\r\n            node: this.node,\r\n            subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n            index: this.index\r\n        });\r\n    }\r\n\r\n    onDropNodeDragOver(event) {\r\n        event.dataTransfer.dropEffect = 'move';\r\n        if(this.tree.droppableNodes) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    onDropNode(event) {\r\n        if(this.tree.droppableNodes && this.node.droppable !== false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            let dragNode = this.tree.dragNode;\r\n            if(this.tree.allowDrop(dragNode, this.node, this.tree.dragNodeScope)) {\r\n                let dragNodeIndex = this.tree.dragNodeIndex;\r\n                this.tree.dragNodeSubNodes.splice(dragNodeIndex, 1);\r\n\r\n                if(this.node.children)\r\n                    this.node.children.push(dragNode);\r\n                else\r\n                    this.node.children = [dragNode];\r\n\r\n                this.tree.dragDropService.stopDrag({\r\n                    node: dragNode,\r\n                    subNodes: this.node.parent ? this.node.parent.children : this.tree.value,\r\n                    index: this.tree.dragNodeIndex\r\n                });\r\n\r\n                this.tree.onNodeDrop.emit({\r\n                    originalEvent: event,\r\n                    dragNode: dragNode,\r\n                    dropNode: this.node,\r\n                    index: this.index\r\n                });\r\n            }\r\n        }\r\n\r\n        this.draghoverNode = false;\r\n    }\r\n\r\n    onDropNodeDragEnter(event) {\r\n        if(this.tree.droppableNodes && this.node.droppable !== false && this.tree.allowDrop(this.tree.dragNode, this.node, this.tree.dragNodeScope)) {\r\n            this.draghoverNode = true;\r\n        }\r\n    }\r\n\r\n    onDropNodeDragLeave(event) {\r\n        if(this.tree.droppableNodes) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            if(event.x > rect.left + rect.width || event.x < rect.left || event.y >= Math.floor(rect.top + rect.height) || event.y < rect.top) {\r\n               this.draghoverNode = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-tree',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-tree ui-widget ui-widget-content ui-corner-all':true,'ui-tree-selectable':selectionMode,'ui-treenode-dragover':dragHover,'ui-tree-loading': loading}\" [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"!horizontal\"\r\n            (drop)=\"onDrop($event)\" (dragover)=\"onDragOver($event)\" (dragenter)=\"onDragEnter($event)\" (dragleave)=\"onDragLeave($event)\">\r\n            <div class=\"ui-tree-loading-mask ui-widget-overlay\" *ngIf=\"loading\"></div>\r\n            <div class=\"ui-tree-loading-content\" *ngIf=\"loading\">\r\n                <i [class]=\"'fa fa-spin fa-2x ' + loadingIcon\"></i>\r\n            </div>\r\n            <ul class=\"ui-tree-container\" *ngIf=\"value\">\r\n                <p-treeNode *ngFor=\"let node of value;let firstChild=first;let lastChild=last; let index=index\" [node]=\"node\" \r\n                [firstChild]=\"firstChild\" [lastChild]=\"lastChild\" [index]=\"index\"></p-treeNode>\r\n            </ul>\r\n            <div class=\"ui-tree-empty-message\" *ngIf=\"!loading && !value\">{{emptyMessage}}</div>\r\n        </div>\r\n        <div [ngClass]=\"{'ui-tree ui-tree-horizontal ui-widget ui-widget-content ui-corner-all':true,'ui-tree-selectable':selectionMode}\"  [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"horizontal\">\r\n            <div class=\"ui-tree-loading ui-widget-overlay\" *ngIf=\"loading\"></div>\r\n            <div class=\"ui-tree-loading-content\" *ngIf=\"loading\">\r\n                <i [class]=\"'fa fa-spin fa-2x ' + loadingIcon\"></i>\r\n            </div>\r\n            <table *ngIf=\"value&&value[0]\">\r\n                <p-treeNode [node]=\"value[0]\" [root]=\"true\"></p-treeNode>\r\n            </table>\r\n            <div class=\"ui-tree-empty-message\" *ngIf=\"!loading && !value\">{{emptyMessage}}</div>\r\n        </div>\r\n    `\r\n})\r\nexport class Tree implements OnInit,AfterContentInit,OnDestroy,BlockableUI {\r\n\r\n    @Input() value: TreeNode[];\r\n\r\n    @Input() selectionMode: string;\r\n\r\n    @Input() selection: any;\r\n\r\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() contextMenu: any;\r\n\r\n    @Input() layout: string = 'vertical';\r\n\r\n    @Input() draggableScope: any;\r\n\r\n    @Input() droppableScope: any;\r\n\r\n    @Input() draggableNodes: boolean;\r\n\r\n    @Input() droppableNodes: boolean;\r\n\r\n    @Input() metaKeySelection: boolean = true;\r\n\r\n    @Input() propagateSelectionUp: boolean = true;\r\n\r\n    @Input() propagateSelectionDown: boolean = true;\r\n\r\n    @Input() loading: boolean;\r\n\r\n    @Input() loadingIcon: string = 'fa-circle-o-notch';\r\n\r\n    @Input() emptyMessage: string = 'No records found';\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    public templateMap: any;\r\n\r\n    public nodeTouched: boolean;\r\n\r\n    public dragNodeTree: Tree;\r\n\r\n    public dragNode: TreeNode;\r\n\r\n    public dragNodeSubNodes: TreeNode[];\r\n\r\n    public dragNodeIndex: number;\r\n\r\n    public dragNodeScope: any;\r\n\r\n    public dragHover: boolean;\r\n\r\n    public dragStartSubscription: Subscription;\r\n\r\n    public dragStopSubscription: Subscription;\r\n\r\n    constructor(public el: ElementRef, @Optional() public dragDropService: TreeDragDropService) {}\r\n\r\n    ngOnInit() {\r\n        if(this.droppableNodes) {\r\n            this.dragStartSubscription = this.dragDropService.dragStart$.subscribe(\r\n              event => {\r\n                this.dragNodeTree = event.tree;\r\n                this.dragNode = event.node;\r\n                this.dragNodeSubNodes = event.subNodes;\r\n                this.dragNodeIndex = event.index;\r\n                this.dragNodeScope = event.scope;\r\n            });\r\n\r\n            this.dragStopSubscription = this.dragDropService.dragStop$.subscribe(\r\n              event => {\r\n                this.dragNodeTree = null;\r\n                this.dragNode = null;\r\n                this.dragNodeSubNodes = null;\r\n                this.dragNodeIndex = null;\r\n                this.dragNodeScope = null;\r\n                this.dragHover = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    get horizontal(): boolean {\r\n        return this.layout == 'horizontal';\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if(this.templates.length) {\r\n            this.templateMap = {};\r\n        }\r\n\r\n        this.templates.forEach((item) => {\r\n            this.templateMap[item.name] = item.template;\r\n        });\r\n    }\r\n\r\n    onNodeClick(event: MouseEvent, node: TreeNode) {\r\n        let eventTarget = (<Element> event.target);\r\n\r\n        if(eventTarget.className && eventTarget.className.indexOf('ui-tree-toggler') === 0) {\r\n            return;\r\n        }\r\n        else if(this.selectionMode) {\r\n            if(node.selectable === false) {\r\n                return;\r\n            }\r\n\r\n            let index = this.findIndexInSelection(node);\r\n            let selected = (index >= 0);\r\n\r\n            if(this.isCheckboxSelectionMode()) {\r\n                if(selected) {\r\n                    if(this.propagateSelectionDown)\r\n                        this.propagateDown(node, false);\r\n                    else\r\n                        this.selection = this.selection.filter((val,i) => i!=index);\r\n\r\n                    if(this.propagateSelectionUp && node.parent) {\r\n                        this.propagateUp(node.parent, false);\r\n                    }\r\n\r\n                    this.selectionChange.emit(this.selection);\r\n                    this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n                }\r\n                else {\r\n                    if(this.propagateSelectionDown)\r\n                        this.propagateDown(node, true);\r\n                    else\r\n                        this.selection = [...this.selection||[],node];\r\n\r\n                    if(this.propagateSelectionUp && node.parent) {\r\n                        this.propagateUp(node.parent, true);\r\n                    }\r\n\r\n                    this.selectionChange.emit(this.selection);\r\n                    this.onNodeSelect.emit({originalEvent: event, node: node});\r\n                }\r\n            }\r\n            else {\r\n                let metaSelection = this.nodeTouched ? false : this.metaKeySelection;\r\n\r\n                if(metaSelection) {\r\n                    let metaKey = (event.metaKey||event.ctrlKey);\r\n\r\n                    if(selected && metaKey) {\r\n                        if(this.isSingleSelectionMode()) {\r\n                            this.selectionChange.emit(null);\r\n                        }\r\n                        else {\r\n                            this.selection = this.selection.filter((val,i) => i!=index);\r\n                            this.selectionChange.emit(this.selection);\r\n                        }\r\n\r\n                        this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n                    }\r\n                    else {\r\n                        if(this.isSingleSelectionMode()) {\r\n                            this.selectionChange.emit(node);\r\n                        }\r\n                        else if(this.isMultipleSelectionMode()) {\r\n                            this.selection = (!metaKey) ? [] : this.selection||[];\r\n                            this.selection = [...this.selection,node];\r\n                            this.selectionChange.emit(this.selection);\r\n                        }\r\n\r\n                        this.onNodeSelect.emit({originalEvent: event, node: node});\r\n                    }\r\n                }\r\n                else {\r\n                    if(this.isSingleSelectionMode()) {\r\n                        if(selected) {\r\n                            this.selection = null;\r\n                            this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n                        }\r\n                        else {\r\n                            this.selection = node;\r\n                            this.onNodeSelect.emit({originalEvent: event, node: node});\r\n                        }\r\n                    }\r\n                    else {\r\n                        if(selected) {\r\n                            this.selection = this.selection.filter((val,i) => i!=index);\r\n                            this.onNodeUnselect.emit({originalEvent: event, node: node});\r\n                        }\r\n                        else {\r\n                            this.selection = [...this.selection||[],node];\r\n                            this.onNodeSelect.emit({originalEvent: event, node: node});\r\n                        }\r\n                    }\r\n\r\n                    this.selectionChange.emit(this.selection);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.nodeTouched = false;\r\n    }\r\n\r\n    onNodeTouchEnd() {\r\n        this.nodeTouched = true;\r\n    }\r\n\r\n    onNodeRightClick(event: MouseEvent, node: TreeNode) {\r\n        if(this.contextMenu) {\r\n            let eventTarget = (<Element> event.target);\r\n\r\n            if(eventTarget.className && eventTarget.className.indexOf('ui-tree-toggler') === 0) {\r\n                return;\r\n            }\r\n            else {\r\n                let index = this.findIndexInSelection(node);\r\n                let selected = (index >= 0);\r\n\r\n                if(!selected) {\r\n                    if(this.isSingleSelectionMode())\r\n                        this.selectionChange.emit(node);\r\n                    else\r\n                        this.selectionChange.emit([node]);\r\n                }\r\n\r\n                this.contextMenu.show(event);\r\n                this.onNodeContextMenuSelect.emit({originalEvent: event, node: node});\r\n            }\r\n        }\r\n    }\r\n\r\n    findIndexInSelection(node: TreeNode) {\r\n        let index: number = -1;\r\n\r\n        if(this.selectionMode && this.selection) {\r\n            if(this.isSingleSelectionMode()) {\r\n                index = (this.selection == node) ? 0 : - 1;\r\n            }\r\n            else {\r\n                for(let i = 0; i  < this.selection.length; i++) {\r\n                    if(this.selection[i] == node) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    propagateUp(node: TreeNode, select: boolean) {\r\n        if(node.children && node.children.length) {\r\n            let selectedCount: number = 0;\r\n            let childPartialSelected: boolean = false;\r\n            for(let child of node.children) {\r\n                if(this.isSelected(child)) {\r\n                    selectedCount++;\r\n                }\r\n                else if(child.partialSelected) {\r\n                    childPartialSelected = true;\r\n                }\r\n            }\r\n\r\n            if(select && selectedCount == node.children.length) {\r\n                this.selection = [...this.selection||[],node];\r\n                node.partialSelected = false;\r\n            }\r\n            else {\r\n                if(!select) {\r\n                    let index = this.findIndexInSelection(node);\r\n                    if(index >= 0) {\r\n                        this.selection = this.selection.filter((val,i) => i!=index);\r\n                    }\r\n                }\r\n\r\n                if(childPartialSelected || selectedCount > 0 && selectedCount != node.children.length)\r\n                    node.partialSelected = true;\r\n                else\r\n                    node.partialSelected = false;\r\n            }\r\n        }\r\n\r\n        let parent = node.parent;\r\n        if(parent) {\r\n            this.propagateUp(parent, select);\r\n        }\r\n    }\r\n\r\n    propagateDown(node: TreeNode, select: boolean) {\r\n        let index = this.findIndexInSelection(node);\r\n\r\n        if(select && index == -1) {\r\n            this.selection = [...this.selection||[],node];\r\n        }\r\n        else if(!select && index > -1) {\r\n            this.selection = this.selection.filter((val,i) => i!=index);\r\n        }\r\n\r\n        node.partialSelected = false;\r\n\r\n        if(node.children && node.children.length) {\r\n            for(let child of node.children) {\r\n                this.propagateDown(child, select);\r\n            }\r\n        }\r\n    }\r\n\r\n    isSelected(node: TreeNode) {\r\n        return this.findIndexInSelection(node) != -1;\r\n    }\r\n\r\n    isSingleSelectionMode() {\r\n        return this.selectionMode && this.selectionMode == 'single';\r\n    }\r\n\r\n    isMultipleSelectionMode() {\r\n        return this.selectionMode && this.selectionMode == 'multiple';\r\n    }\r\n\r\n    isCheckboxSelectionMode() {\r\n        return this.selectionMode && this.selectionMode == 'checkbox';\r\n    }\r\n\r\n    getTemplateForNode(node: TreeNode): TemplateRef<any> {\r\n        if(this.templateMap)\r\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\r\n        else\r\n            return null;\r\n    }\r\n\r\n    onDragOver(event) {\r\n        if(this.droppableNodes && (!this.value || this.value.length === 0)) {\r\n            event.dataTransfer.dropEffect = 'move';\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onDrop(event) {\r\n        if(this.droppableNodes && (!this.value || this.value.length === 0)) {\r\n            event.preventDefault();\r\n            let dragNode = this.dragNode;\r\n            if(this.allowDrop(dragNode, null, this.dragNodeScope)) {\r\n                let dragNodeIndex = this.dragNodeIndex;\r\n                this.dragNodeSubNodes.splice(dragNodeIndex, 1);\r\n                this.value = this.value||[];\r\n                this.value.push(dragNode);\r\n\r\n                this.dragDropService.stopDrag({\r\n                    node: dragNode\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onDragEnter(event) {\r\n        if(this.droppableNodes && this.allowDrop(this.dragNode, null, this.dragNodeScope)) {\r\n            this.dragHover = true;\r\n        }\r\n    }\r\n\r\n    onDragLeave(event) {\r\n        if(this.droppableNodes) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            if(event.x > rect.left + rect.width || event.x < rect.left || event.y > rect.top + rect.height || event.y < rect.top) {\r\n               this.dragHover = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    allowDrop(dragNode: TreeNode, dropNode: TreeNode, dragNodeScope: any): boolean {\r\n        if(!dragNode) {\r\n            //prevent random html elements to be dragged\r\n            return false;\r\n        }\r\n        else if(this.isValidDragScope(dragNodeScope)) {\r\n            let allow: boolean = true;\r\n            if(dropNode) {\r\n                if(dragNode === dropNode) {\r\n                    allow = false;\r\n                }\r\n                else {\r\n                    let parent = dropNode.parent;\r\n                    while(parent != null) {\r\n                        if(parent === dragNode) {\r\n                            allow = false;\r\n                            break;\r\n                        }\r\n                        parent = parent.parent;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return allow;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isValidDragScope(dragScope: any): boolean {\r\n        let dropScope = this.droppableScope;\r\n\r\n        if(dropScope) {\r\n            if(typeof dropScope === 'string') {\r\n                if(typeof dragScope === 'string')\r\n                    return dropScope === dragScope;\r\n                else if(dragScope instanceof Array)\r\n                    return (<Array<any>>dragScope).indexOf(dropScope) != -1;\r\n            }\r\n            else if(dropScope instanceof Array) {\r\n                if(typeof dragScope === 'string') {\r\n                    return (<Array<any>>dropScope).indexOf(dragScope) != -1;\r\n                }\r\n                else if(dragScope instanceof Array) {\r\n                    for(let s of dropScope) {\r\n                        for(let ds of dragScope) {\r\n                            if(s === ds) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getBlockableElement(): HTMLElement {\r\n      return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if(this.dragStartSubscription) {\r\n            this.dragStartSubscription.unsubscribe();\r\n        }\r\n\r\n        if(this.dragStopSubscription) {\r\n            this.dragStopSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Tree,SharedModule],\r\n    declarations: [Tree,UITreeNode]\r\n})\r\nexport class TreeModule { }\r\n"],"sourceRoot":""}