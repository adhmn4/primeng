{"version":3,"sources":["webpack:///./src/app/components/paginator/paginator.ts"],"names":[],"mappings":"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","file":"components-datagrid-datagriddemo-module~components-datalist-datalistdemo-module~components-datatable~aa3f6037.js","sourcesContent":["import {NgModule,Component,OnInit,ElementRef,Input,Output,SimpleChange,EventEmitter,TemplateRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {DropdownModule} from '../dropdown/dropdown';\r\nimport {SelectItem} from '../common/selectitem';\r\nimport {SharedModule} from '../common/shared';\r\n\r\n@Component({\r\n    selector: 'p-paginator',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix'\"\r\n            *ngIf=\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\">\r\n            <div class=\"ui-paginator-left-content\" *ngIf=\"templateLeft\">\r\n                <ng-container *ngTemplateOutlet=\"templateLeft; context: {$implicit: paginatorState}\"></ng-container>\r\n            </div>\r\n            <a href=\"#\" class=\"ui-paginator-first ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToFirst($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage()}\" [tabindex]=\"isFirstPage() ? -1 : null\">\r\n                <span class=\"fa fa-step-backward\"></span>\r\n            </a>\r\n            <a href=\"#\" class=\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToPrev($event)\" [ngClass]=\"{'ui-state-disabled':isFirstPage()}\" [tabindex]=\"isFirstPage() ? -1 : null\">\r\n                <span class=\"fa fa-backward\"></span>\r\n            </a>\r\n            <span class=\"ui-paginator-pages\">\r\n                <a href=\"#\" *ngFor=\"let pageLink of pageLinks\" class=\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"onPageLinkClick($event, pageLink - 1)\" [ngClass]=\"{'ui-state-active': (pageLink-1 == getPage())}\">{{pageLink}}</a>\r\n            </span>\r\n            <a href=\"#\" class=\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToNext($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage()}\" [tabindex]=\"isLastPage() ? -1 : null\">\r\n                <span class=\"fa fa-forward\"></span>\r\n            </a>\r\n            <a href=\"#\" class=\"ui-paginator-last ui-paginator-element ui-state-default ui-corner-all\"\r\n                    (click)=\"changePageToLast($event)\" [ngClass]=\"{'ui-state-disabled':isLastPage()}\" [tabindex]=\"isLastPage() ? -1 : null\">\r\n                <span class=\"fa fa-step-forward\"></span>\r\n            </a>\r\n            <p-dropdown [options]=\"rowsPerPageItems\" [(ngModel)]=\"rows\" *ngIf=\"rowsPerPageOptions\" \r\n                (onChange)=\"onRppChange($event)\" [lazy]=\"false\" [autoWidth]=\"false\" [appendTo]=\"dropdownAppendTo\"></p-dropdown>\r\n            <div class=\"ui-paginator-right-content\" *ngIf=\"templateRight\">\r\n                <ng-container *ngTemplateOutlet=\"templateRight; context: {$implicit: paginatorState}\"></ng-container>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class Paginator implements OnInit {\r\n\r\n    @Input() pageLinkSize: number = 5;\r\n\r\n    @Output() onPageChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() alwaysShow: boolean = true;\r\n    \r\n    @Input() templateLeft: TemplateRef<any>;\r\n    \r\n    @Input() templateRight: TemplateRef<any>;\r\n\r\n    @Input() dropdownAppendTo: any;\r\n\r\n    pageLinks: number[];\r\n\r\n    _totalRecords: number = 0;\r\n\r\n    _first: number = 0;\r\n\r\n    _rows: number = 0;\r\n    \r\n    _rowsPerPageOptions: number[];\r\n    \r\n    rowsPerPageItems: SelectItem[];\r\n    \r\n    paginatorState: any;\r\n    \r\n    ngOnInit() {\r\n        this.updatePaginatorState();\r\n    }\r\n\r\n    @Input() get totalRecords(): number {\r\n        return this._totalRecords;\r\n    }\r\n\r\n    set totalRecords(val:number) {\r\n        this._totalRecords = val;\r\n        this.updatePageLinks();\r\n    }\r\n\r\n    @Input() get first(): number {\r\n        return this._first;\r\n    }\r\n\r\n    set first(val:number) {\r\n        this._first = val;\r\n        this.updatePageLinks();\r\n    }\r\n\r\n    @Input() get rows(): number {\r\n        return this._rows;\r\n    }\r\n\r\n    set rows(val:number) {\r\n        this._rows = val;\r\n        this.updatePageLinks();\r\n    }\r\n    \r\n    @Input() get rowsPerPageOptions(): number[] {\r\n        return this._rowsPerPageOptions;\r\n    }\r\n\r\n    set rowsPerPageOptions(val:number[]) {\r\n        this._rowsPerPageOptions = val;\r\n        if(this._rowsPerPageOptions) {\r\n            this.rowsPerPageItems = [];\r\n            for(let opt of this._rowsPerPageOptions) {\r\n                this.rowsPerPageItems.push({label: String(opt), value: opt});\r\n            }\r\n        }\r\n    }\r\n\r\n    isFirstPage() {\r\n        return this.getPage() === 0;\r\n    }\r\n\r\n    isLastPage() {\r\n        return this.getPage() === this.getPageCount() - 1;\r\n    }\r\n\r\n    getPageCount() {\r\n        return Math.ceil(this.totalRecords/this.rows)||1;\r\n    }\r\n\r\n    calculatePageLinkBoundaries() {\r\n        let numberOfPages = this.getPageCount(),\r\n        visiblePages = Math.min(this.pageLinkSize, numberOfPages);\r\n\r\n        //calculate range, keep current in middle if necessary\r\n        let start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))),\r\n        end = Math.min(numberOfPages - 1, start + visiblePages - 1);\r\n\r\n        //check when approaching to last page\r\n        var delta = this.pageLinkSize - (end - start + 1);\r\n        start = Math.max(0, start - delta);\r\n\r\n        return [start, end];\r\n    }\r\n\r\n    updatePageLinks() {\r\n        this.pageLinks = [];\r\n        let boundaries = this.calculatePageLinkBoundaries(),\r\n        start = boundaries[0],\r\n        end = boundaries[1];\r\n\r\n        for(let i = start; i <= end; i++) {\r\n            this.pageLinks.push(i + 1);\r\n        }\r\n    }\r\n\r\n    changePage(p :number) {\r\n        var pc = this.getPageCount();\r\n\r\n        if(p >= 0 && p < pc) {\r\n            this.first = this.rows * p;\r\n            var state = {\r\n                page: p,\r\n                first: this.first,\r\n                rows: this.rows,\r\n                pageCount: pc\r\n            };\r\n            this.updatePageLinks();\r\n\r\n            this.onPageChange.emit(state);\r\n            this.updatePaginatorState();\r\n        }\r\n    }\r\n\r\n    getPage(): number {\r\n        return Math.floor(this.first / this.rows);\r\n    }\r\n\r\n    changePageToFirst(event) {\r\n      if(!this.isFirstPage()){\r\n          this.changePage(0);\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    changePageToPrev(event) {\r\n        this.changePage(this.getPage() - 1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    changePageToNext(event) {\r\n        this.changePage(this.getPage()  + 1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    changePageToLast(event) {\r\n      if(!this.isLastPage()){\r\n          this.changePage(this.getPageCount() - 1);\r\n      }\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    onPageLinkClick(event, page) {\r\n        this.changePage(page);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onRppChange(event) {\r\n        this.changePage(this.getPage());\r\n    }\r\n    \r\n    updatePaginatorState() {\r\n        this.paginatorState = {\r\n            page: this.getPage(),\r\n            rows: this.rows,\r\n            first: this.first,\r\n            totalRecords: this.totalRecords\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,DropdownModule,FormsModule,SharedModule],\r\n    exports: [Paginator,DropdownModule,FormsModule,SharedModule],\r\n    declarations: [Paginator]\r\n})\r\nexport class PaginatorModule { }\r\n"],"sourceRoot":""}