{"version":3,"sources":["webpack:///./src/app/components/listbox/listbox.ts"],"names":[],"mappings":"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","file":"components-listbox-listboxdemo-module~components-responsive-responsivedemo-module.js","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, EventEmitter, AfterContentInit, ContentChildren, ContentChild, QueryList, TemplateRef, IterableDiffers, forwardRef, ChangeDetectorRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SelectItem } from '../common/selectitem';\r\nimport { SharedModule, PrimeTemplate, Footer, Header } from '../common/shared';\r\nimport { DomHandler } from '../dom/domhandler';\r\nimport { ObjectUtils } from '../utils/objectutils';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nexport const LISTBOX_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => Listbox),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-listbox',\r\n    template: `\r\n    <div [ngClass]=\"{'ui-listbox ui-inputtext ui-widget ui-widget-content ui-corner-all':true,'ui-state-disabled':disabled,'ui-state-focus':focus}\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n      <div class=\"ui-helper-hidden-accessible\">\r\n        <input type=\"text\" readonly=\"readonly\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\">\r\n      </div>\r\n      <div class=\"ui-widget-header ui-corner-all ui-listbox-header ui-helper-clearfix\" *ngIf=\"headerFacet\">\r\n        <ng-content select=\"p-header\"></ng-content>\r\n      </div>\r\n      <div class=\"ui-widget-header ui-corner-all ui-listbox-header ui-helper-clearfix\" *ngIf=\"(checkbox && multiple) || filter\" [ngClass]=\"{'ui-listbox-header-w-checkbox': checkbox}\">\r\n        <div class=\"ui-chkbox ui-widget\" *ngIf=\"checkbox && multiple && showToggleAll\">\r\n          <div class=\"ui-helper-hidden-accessible\">\r\n            <input #cb type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\">\r\n          </div>\r\n          <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" [ngClass]=\"{'ui-state-active':allChecked}\" (click)=\"toggleAll($event,cb)\">\r\n            <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'fa fa-check':allChecked}\"></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"ui-listbox-filter-container\" *ngIf=\"filter\">\r\n          <input type=\"text\" role=\"textbox\" (input)=\"onFilter($event)\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\" [disabled]=\"disabled\">\r\n          <span class=\"ui-listbox-filter-icon fa fa-search\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"ui-listbox-list-wrapper\" [ngStyle]=\"listStyle\">\r\n        <ul class=\"ui-listbox-list\">\r\n          <li *ngFor=\"let option of options; let i = index;\" [style.display]=\"isItemVisible(option) ? 'block' : 'none'\"\r\n              [ngClass]=\"{'ui-listbox-item ui-corner-all':true,'ui-state-highlight':isSelected(option)}\"\r\n              (click)=\"onOptionClick($event,option)\" (dblclick)=\"onDoubleClick($event,option)\" (touchend)=\"onOptionTouchEnd($event,option)\">\r\n            <div class=\"ui-chkbox ui-widget\" *ngIf=\"checkbox && multiple\" (click)=\"onCheckboxClick($event,option)\">\r\n              <div class=\"ui-helper-hidden-accessible\">\r\n                <input type=\"checkbox\" [checked]=\"isSelected(option)\" [disabled]=\"disabled\">\r\n              </div>\r\n              <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" [ngClass]=\"{'ui-state-active':isSelected(option)}\">\r\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'fa fa-check':isSelected(option)}\"></span>\r\n              </div>\r\n            </div>\r\n            <span *ngIf=\"!itemTemplate\">{{option.label}}</span>\r\n            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"ui-listbox-footer ui-widget-header ui-corner-all\" *ngIf=\"footerFacet\">\r\n        <ng-content select=\"p-footer\"></ng-content>\r\n      </div>\r\n    </div>\r\n  `,\r\n    providers: [DomHandler, ObjectUtils, LISTBOX_VALUE_ACCESSOR]\r\n})\r\nexport class Listbox implements AfterContentInit, ControlValueAccessor {\r\n\r\n    @Input() multiple: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() listStyle: any;\r\n\r\n    @Input() readonly: boolean;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() checkbox: boolean = false;\r\n\r\n    @Input() filter: boolean = false;\r\n\r\n    @Input() filterMode: string = 'contains';\r\n\r\n    @Input() metaKeySelection: boolean = true;\r\n\r\n    @Input() dataKey: string;\r\n\r\n    @Input() showToggleAll: boolean = true;\r\n\r\n    @Input() optionLabel: string;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onDblClick: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChild(Header) headerFacet;\r\n\r\n    @ContentChild(Footer) footerFacet;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    public itemTemplate: TemplateRef<any>;\r\n\r\n    public filterValue: string;\r\n\r\n    public filtered: boolean;\r\n\r\n    public value: any;\r\n\r\n    public onModelChange: Function = () => { };\r\n\r\n    public onModelTouched: Function = () => { };\r\n\r\n    public checkboxClick: boolean;\r\n\r\n    public optionTouched: boolean;\r\n\r\n    public focus: boolean;\r\n\r\n    public _options: any[];\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler, public objectUtils: ObjectUtils, public cd: ChangeDetectorRef) { }\r\n\r\n    @Input() get options(): any[] {\r\n        return this._options;\r\n    }\r\n\r\n    set options(val: any[]) {\r\n        let opts = this.optionLabel ? this.objectUtils.generateSelectItems(val, this.optionLabel) : val;\r\n        this._options = opts;\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'item':\r\n                    this.itemTemplate = item.template;\r\n                    break;\r\n\r\n                default:\r\n                    this.itemTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n\r\n    onOptionClick(event, option) {\r\n        if (this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n\r\n        if (!this.checkboxClick) {\r\n            if (this.multiple)\r\n                this.onOptionClickMultiple(event, option);\r\n            else\r\n                this.onOptionClickSingle(event, option);\r\n        }\r\n        else {\r\n            this.checkboxClick = false;\r\n        }\r\n\r\n        this.optionTouched = false;\r\n    }\r\n\r\n    onOptionTouchEnd(event, option) {\r\n        if (this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n\r\n        this.optionTouched = true;\r\n    }\r\n\r\n    onOptionClickSingle(event, option) {\r\n        let selected = this.isSelected(option);\r\n        let valueChanged = false;\r\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\r\n\r\n        if (metaSelection) {\r\n            let metaKey = (event.metaKey || event.ctrlKey);\r\n\r\n            if (selected) {\r\n                if (metaKey) {\r\n                    this.value = null;\r\n                    valueChanged = true;\r\n                }\r\n            }\r\n            else {\r\n                this.value = option.value;\r\n                valueChanged = true;\r\n            }\r\n        }\r\n        else {\r\n            this.value = selected ? null : option.value;\r\n            valueChanged = true;\r\n        }\r\n\r\n        if (valueChanged) {\r\n            this.onModelChange(this.value);\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                value: this.value\r\n            });\r\n        }\r\n    }\r\n\r\n    onOptionClickMultiple(event, option) {\r\n        let selected = this.isSelected(option);\r\n        let valueChanged = false;\r\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\r\n\r\n        if (metaSelection) {\r\n            let metaKey = (event.metaKey || event.ctrlKey);\r\n\r\n            if (selected) {\r\n                if (metaKey) {\r\n                    this.removeOption(option);\r\n                }\r\n                else {\r\n                    this.value = [option.value];\r\n                }\r\n                valueChanged = true;\r\n            }\r\n            else {\r\n                this.value = (metaKey) ? this.value || [] : [];\r\n                this.value = [...this.value, option.value];\r\n                valueChanged = true;\r\n            }\r\n        }\r\n        else {\r\n            if (selected) {\r\n                this.removeOption(option);\r\n            }\r\n            else {\r\n                this.value = [...this.value || [], option.value];\r\n            }\r\n\r\n            valueChanged = true;\r\n        }\r\n\r\n        if (valueChanged) {\r\n            this.onModelChange(this.value);\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                value: this.value\r\n            });\r\n        }\r\n    }\r\n\r\n    removeOption(option: any): void {\r\n        this.value = this.value.filter(val => !this.objectUtils.equals(val, option.value, this.dataKey));\r\n    }\r\n\r\n    isSelected(option: SelectItem) {\r\n        let selected = false;\r\n\r\n        if (this.multiple) {\r\n            if (this.value) {\r\n                for (let val of this.value) {\r\n                    if (this.objectUtils.equals(val, option.value, this.dataKey)) {\r\n                        selected = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            selected = this.objectUtils.equals(this.value, option.value, this.dataKey);\r\n        }\r\n\r\n        return selected;\r\n    }\r\n\r\n    get allChecked(): boolean {\r\n        if (this.filterValue)\r\n            return this.allFilteredSelected();\r\n        else\r\n            return this.value && this.options && (this.value.length === this.options.length);\r\n    }\r\n\r\n    allFilteredSelected(): boolean {\r\n        let allSelected: boolean;\r\n        if (this.value && this.options && this.options.length)  {\r\n            allSelected = true;\r\n            for (let opt of this.options) {\r\n                if (this.isItemVisible(opt)) {\r\n                    if (!this.isSelected(opt)) {\r\n                        allSelected = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return allSelected;\r\n    }\r\n\r\n    onFilter(event) {\r\n        let query = event.target.value.trim().toLowerCase();\r\n        this.filterValue = query.length ? query : null;\r\n    }\r\n\r\n    toggleAll(event, checkbox) {\r\n        if (this.disabled || this.readonly || !this.options || this.options.length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (checkbox.checked) {\r\n            this.value = [];\r\n        }\r\n        else {\r\n            if (this.options) {\r\n                this.value = [];\r\n                for (let i = 0; i < this.options.length; i++) {\r\n                    let opt = this.options[i];\r\n                    if (this.isItemVisible(opt)) {\r\n                        this.value.push(opt.value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        checkbox.checked = !checkbox.checked;\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({ originalEvent: event, value: this.value });\r\n    }\r\n\r\n    isItemVisible(option: SelectItem): boolean {\r\n        if (this.filterValue) {\r\n            let visible;\r\n\r\n            switch (this.filterMode) {\r\n                case 'startsWith':\r\n                    visible = option.label.toLowerCase().indexOf(this.filterValue.toLowerCase()) === 0;\r\n                    break;\r\n\r\n                case 'contains':\r\n                    visible = option.label.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\r\n                    break;\r\n\r\n                default:\r\n                    visible = true;\r\n            }\r\n\r\n            return visible;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onDoubleClick(event: Event, option: SelectItem): any {\r\n        if (this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n\r\n        this.onDblClick.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        })\r\n    }\r\n\r\n    onCheckboxClick(event: Event, option: SelectItem) {\r\n        if (this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n\r\n        this.checkboxClick = true;\r\n        let selected = this.isSelected(option);\r\n\r\n        if (selected) {\r\n            this.removeOption(option);\r\n        }\r\n        else {\r\n            this.value = this.value ? this.value : [];\r\n            this.value = [...this.value, option.value];\r\n        }\r\n\r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        });\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        this.focus = true;\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        this.focus = false;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, SharedModule],\r\n    exports: [Listbox, SharedModule],\r\n    declarations: [Listbox]\r\n})\r\nexport class ListboxModule { }\r\n\r\n"],"sourceRoot":""}